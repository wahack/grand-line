/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Market, MarketInterface } from "../../contracts/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "buyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "buyWithEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyWithSP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104c43803806104c4833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6103ad806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c580ea2146100515780638085d06d1461005b5780638e148776146100775780639fbaf13114610095575b600080fd5b61005961009f565b005b6100756004803603810190610070919061021d565b6100a1565b005b61007f61015e565b60405161008c919061027f565b60405180910390f35b61009d610182565b005b565b60005a905060005a9050600081836100b991906102c9565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933620186a08461010791906102fd565b6040518363ffffffff1660e01b815260040161012492919061034e565b600060405180830381600087803b15801561013e57600080fd5b505af1158015610152573d6000803e3d6000fd5b50505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b482610189565b9050919050565b6101c4816101a9565b81146101cf57600080fd5b50565b6000813590506101e1816101bb565b92915050565b6000819050919050565b6101fa816101e7565b811461020557600080fd5b50565b600081359050610217816101f1565b92915050565b60008060006060848603121561023657610235610184565b5b6000610244868287016101d2565b935050602061025586828701610208565b925050604061026686828701610208565b9150509250925092565b610279816101a9565b82525050565b60006020820190506102946000830184610270565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102d4826101e7565b91506102df836101e7565b92508282039050818111156102f7576102f661029a565b5b92915050565b6000610308826101e7565b9150610313836101e7565b9250828202610321816101e7565b915082820484148315176103385761033761029a565b5b5092915050565b610348816101e7565b82525050565b60006040820190506103636000830185610270565b610370602083018461033f565b939250505056fea26469706673582212204308bb9c65f9c5b45d58b1ac3d06d7783759b4308f2ed7de85747e6de0b157d464736f6c63430008140033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
